// Ключові поняття
/**
 * Components - Компоненти
 * JSX - JavaScrpt Sintax Extension
 * Prons - Властивості
 * State - Стан
 */

// Components - Компоненти
// Це будівельні блоки люблого додатку, вибудовуються в чітку ієрархічну структуру, обов'язково має бути батьківський компонент, компоненти можна використовувати повторно.
/**
 * ХАРАКТЕРИСТИКИ КОМПОНЕНТІВ
 * Компоненти можна використовувати багатократно
 * Компоненти формують чітку ієрарїічну структуру
 * Виглядлм компонентім можна керувати ззовні за допомогою властивотей
 * Компоненти МОЖУТЬ мають свій власний стан
 * Кожен компонент відповідає за окрему логічну частину компонента
 */

// Іерархія компонентів
/**
 * Має бути корневий компонент, який маже включати інші компоненти.
 * Також, деякі компоненти можуть містити в собі інші компоненти, щось типу групування-об'єднання схожих компонентів.
 * Компоненти можуть бути видімі та невидімі, наприклад основний компронент може бути не видимим, а ті які він містить в собі, вони можуть бути видимі. Невидімі потріні для стоврення ієрархії.
 * Можна перевикористовувати компоненти, за допогою однакових компонентів, ми можемо створювати різні вигляди компонентів.
 */

// Анатомія компонентів
/**
 * Анатомія компонента REACT:
 * HTML, CSS, JS = один компонент REACT
 */

// Як сторюються компоненти
// ФУНКЦІОНАЛЬНІ КОМПОНЕНТИ
// Найчастіше викоритовують функціональні
// у вигляді звичаних або стрілочних функцій:
function helloworld() {
  return <h1>helloworld</h1>
}

const helloworld2 = () => {
  return <h1>helloworld</h1> // синтаксис JSX
}

// КЛАСОВІ КОМПОНЕНТИ
// Обов'язково має містити метод render(), який оприділяє, що підлягіє рендеру
class helloWorld extends Component {
  render() {
    return <h1>helloworld</h1>
  }
}