const objectA = {
    a: 10,
    b: true
}

// маємо змінну та значення, значення це ПОСИЛАННЯ на об'єкт!!!

// Створимо копію 
const copyOfA = objectA

// Тепер ми маємо дві змінних: objectA та copyOfA
// Вони мають однакове посилання на об'єкт

copyOfA.a = 20

console.log(copyOfA.a) // -> 20
console.log(objectA.a) // -> 20

// Як видно, обидві змінні змінені

// Також, можна додавати нові властивості об'єкту
copyOfA.c = 'abc'
console.log(objectA.c) // -> abc

// Ctrl + R  - очистити консолі браузера і очищення пам'ті


// ДИНАМІЧНА ТИПІЗАЦІЯ (не статична)
// В JS немає необхідності вказувати тип змінної
// змінювати тип данних в JS можна !!!

// наприклад:
let f = 'abc' // String
f = 10 // Number
f = true
f = undefined

// наприклад 2:
function g() {
    console.log('Hello')
}

g() // Hello
g = 10
g() // Error, is not a function

// Це недолік, потрібно слідкувати за цим!!!
// Старайтеся максимально використовувати тип const
// Ще один варіант запобігти цього, це використанні стрілочної функції
const a = () => { // початок синтаксиса стрілочної функції () => {
    console.log('Hello World')
}

a() // -> Hello World
a = 10 // Error, так як назва функції, сама функція це константа

a()