/** ЗАДАЧА 58 - Удаление свойств объекта
 *
 * 1. Используйте деструктуризацию объекта вместе с rest опертором,
 * чтобы быстро удалить определенные свойства из объекта.
 *
 * 2. Убедитесь, что переменные, которые будут использоваться для деструктуризации удаленных свойств,
 * не будут доступны после операции деструктуризации.
 */

let person = {
  _id: '5ad8cefcc0971792dacb3f1f',
  index: 4,
  processed: false,
  cart: ['item1', 'item2', 'item3'],
  email: 'slarsen@test.com',
  name: 'Samanta Larsen',
  cartId: 435,
}

//const { _id, processed, cart, ...person } = person
// в такому разі об'єкт person2 буже містити остаточні властивості
// перейменуємо person2 на person
// саме тому об'явлена змінна через let
// але в такому варіанті буде помилка, бо person вже об'явлена
// потрібно прибрати const, бо в нас вже об`явлена через let
// тому ми прибрали const, і виникла помилка бо починається з {}, {} - розглядається як корнструкція коду (окремий блок коду), тому ми взяли в дужки
// тому ми візьмемо конструцію в дужки, притиер автоматично додасть ;

// код нижче перезаписує об'єкт let person, одночасно видаляючи з глобальної області видимості такі змінні як _id, processed, cart
{
  let _id, processed, cart
  ;({ _id, processed, cart, ...person } = person)
}

// згіджно завданню, змінні _id, processed, cart не мають бути доступні в глобальній області видимості, а ті змінні які об'явленні в функціях, і я так розумію в окремих блоках коду, вони не будуть доступці в глобільній області, тому код вище ми візьмемо в {}
// змінні let та const об'явлені block scobt valiables, тобто змінні які обмежені зоною видимості блоку кода

console.log(person)
/*
{
  index: 4,
  email: "slarsen@test.com",
  name: "Samanta Larsen",
  cartId: 435
}
*/
